OQUE NÃO FOI

1) CSS Element Selectors
- The element selector selects HTML elements based on the element name.
//
p {
  text-align: center;
  color: red;
}
//

1.1) CSS id Selector
- The id selector uses the id attribute of an HTML element to select a specific element.
//
#para1 {
  text-align: center;
  color: red;
}
<p id="para1">Hello World!</p>
//

1.2) CSS class Selector
- The class selector selects HTML elements with a specific class attribute.
//
.center {
  text-align: center;
  color: red;
}
<h1 class="center">Red and center-aligned heading</h1>
//

- You can also specify that only specific HTML elements should be affected by a class.
//
p.center {
  text-align: center;
  color: red;
}
//

1.3) The CSS Universal Selector
- The universal selector (*) selects all HTML elements on the page.
//
* {
  text-align: center;
  color: blue;
}
//

1.4) The CSS Grouping Selector
- The grouping selector selects all the HTML elements with the same style definitions.
//
h1, h2, p {
  text-align: center;
  color: red;
}
//

1.5) CSS Child Selector
- Todos os <p> que tiver dentro de um article diretamente vai sofrer essa alteração
//
article > p {
   color: blue;
}
//

1.6) CSS Descendant Selector
- Todos os <p> que tiver dentro de um article vai sofrer essa alteração
//
article p {
   color: blue;
}
//

1.7) CSS Adjacent Selector
- Todos os elementos <p> que são colocados imediatamente após os elementos <div>
//
div + p {
  background-color: yellow;
}
//

1.8) CSS General Sibling Selector
- Todos os elementos <p> que são irmãos dos elementos <div>
//
div ~ p {
  background-color: yellow;
}
//

2) Internal CSS
- An internal style sheet may be used if one single HTML page has a unique style.
Internal styles are defined within the <style> element, inside the <head> section of an HTML page:

2.1) Inline CSS
- An inline style may be used to apply a unique style for a single element.

//
<html>
<body>

<h1 style="color:blue;text-align:center;">This is a heading</h1>
<p style="color:red;">This is a paragraph.</p>

</body>
</html>
//

2.2) External CSS

3) CSS Comments
- /* COMENTARIO */

4) CSS Colors (RGB, HEX, HSL)

-"background-color"
-"color" (texto)
-"border"
-"opacity"


4.1) CSS Background page
//
body {
  background-color: lightblue;	
}

or

body {
  background-image: url("bgdesert.jpg");
  background-repeat: no-repeat; (or repeat-x or repeat-y)
  background-position: right top;
  background-attachment: fixed; (or scroll
}

or

body {
  background: #ffffff url("img_tree.png") no-repeat right top;
}
//

4.2) CSS Borders


p.dotted {border-style: dotted;} Defines a dotted border
p.dashed {border-style: dashed;} - Defines a dashed border
p.solid {border-style: solid;} defines a solid border
p.double {border-style: double;} Defines a double border
p.groove {border-style: groove;}  Defines a 3D grooved border. The effect depends on the border-color value
p.ridge {border-style: ridge;} Defines a 3D ridged border. The effect depends on the border-color value
p.inset {border-style: inset;} Defines a 3D inset border. The effect depends on the border-color value
p.outset {border-style: outset;} Defines a 3D outset border. The effect depends on the border-color value
p.none {border-style: none;} Defines no border
p.hidden {border-style: hidden;} Defines a hidden border
p.mix {border-style: dotted dashed solid double;}

OBS:. U can use (top-style, right-style, left-style and bottom-style)

border-width: can be ("5px 20px" or "3px" or "25px 4px 2px 3px" or "thick" or "medium")

border-color: red; (or "red blue" or "red blue green yellow")

border-raudius: 5px;

or

p {
  border: 5px solid red;
}

5) CSS Margins

p {
  margin-top: 100px;
  margin-bottom: 100px;
  margin-right: 150px;
  margin-left: 80px;
  margin: auto; (centralizar)
}

or 

p {
  margin: 25px 50px 75px 100px; (the order is top, right, bottom, left)
}

6) CSS Pading
- properties are used to generate space around an element's content, 
inside of any defined borders.

div {
  padding-top: 50px;
  padding-right: 30px;
  padding-bottom: 50px;
  padding-left: 80px;
  box-sizing: border-box;
}

7) CSS Height(altura)/Width(largura)
- properties are used to set the height and width of an element.
//
div {
  height: 200px;
  width: 50% or 100px;
  background-color: powderblue;
}
//

OBS:.
height		Sets the height of an element
max-height	Sets the maximum height of an element
max-width	Sets the maximum width of an element (não vai ter rolagem da pag)
min-height	Sets the minimum height of an element
min-width	Sets the minimum width of an element
width		Sets the width of an element

8) CSS Box Model
Content - o conteúdo da caixa, onde o texto e as imagens aparecem
Padding (preenchimento) - Limpa uma área ao redor do conteúdo. O estofamento é transparente
Border - uma borda que circunda o preenchimento e o conteúdo
Margin - Limpa uma área fora da borda. A margem é transparente

9) CSS Outline (outline é diferente de border)

Types:
p.dotted {outline-style: dotted;}
p.dashed {outline-style: dashed;}
p.solid {outline-style: solid;}
p.double {outline-style: double;}
p.groove {outline-style: groove;}
p.ridge {outline-style: ridge;}
p.inset {outline-style: inset;}
p.outset {outline-style: outset;}
outline-color: red;
outline-width: thin or medium or 4px or thick;
outline-offset: 15px;

or

p.ex4 {outline: thick ridge pink;}

10) CSS Text

color		Sets the color of text
direction	Specifies the text direction/writing direction
letter-spacing	Increases or decreases the space between characters in a text
line-height	Sets the line height
text-align	Specifies the horizontal alignment of text
text-decoration	Specifies the decoration added to text
text-indent	Specifies the indentation of the first line in a text-block
text-shadow	Specifies the shadow effect added to text
text-transform	Controls the capitalization of text
text-overflow	Specifies how overflowed content that is not displayed should be signaled to the user
unicode-bidi	Used together with the direction property to set or return whether the text should be 
overridden to support multiple languages in the same document

vertical-align	Sets the vertical alignment of an element
white-space	Specifies how white-space inside an element is handled
word-spacing	Increases or decreases the space between words in a text

11) CSS Font

font		Sets all the font properties in one declaration
font-family	Specifies the font family for text
font-size	Specifies the font size of text
font-style	Specifies the font style for text
font-variant	Specifies whether or not a text should be displayed in a small-caps font
font-weight	Specifies the weight of a font
obs:. 
p.a {
  font: italic small-caps bold 12px/30px Georgia, serif;
}

12) CSS Icons
- o use the Font Awesome icons, go to fontawesome.com, sign in, and get a code to 
add in the <head> section of your HTML page

*Font Awesome Icons
//
<!DOCTYPE html>
<html>
<head>
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
</head>
<body>

<i class="fas fa-cloud"></i>
<i class="fas fa-heart"></i>
<i class="fas fa-car"></i>
<i class="fas fa-file"></i>
<i class="fas fa-bars"></i>

</body>
</html>
//

*Bootstrap Icons
//
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>
<body>

<i class="glyphicon glyphicon-cloud"></i>
<i class="glyphicon glyphicon-remove"></i>
<i class="glyphicon glyphicon-user"></i>
<i class="glyphicon glyphicon-envelope"></i>
<i class="glyphicon glyphicon-thumbs-up"></i>

</body>
</html>
//

*Google Icons
//
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>
<body>

<i class="material-icons">cloud</i>
<i class="material-icons">favorite</i>
<i class="material-icons">attachment</i>
<i class="material-icons">computer</i>
<i class="material-icons">traffic</i>

</body>
</html>
//

13) CSS Links Buttom
a:link, a:visited {
  background-color: #f44336;
  color: white;
  padding: 14px 25px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
}

a:hover, a:active {
  background-color: red;
}

14) CSS Pseudo-Class
-Can be used to:
*Style an element when a user mouses over it
*Style visited and unvisited links differently
*Style an element when it gets focus

-The syntax of pseudo-classes:
selector:pseudo-class {
  property: value;
}

*Hover (Selects links on mouse over)
//
div:hover {
  background-color: blue;    "o div muda de cor ao passar o mouse"
}
//

*Tooltip Hover (Hover over me to show the <p> element.)
//
p {
  display: none;
  background-color: yellow;
  padding: 20px;
}

div:hover p {
  display: block;
}

*nth-child (escolhe um para mudar)
//
header li:nth-child(3){
  font-size: 24px;
}

can be use first-child too
nth-child(odd) "sim ou não"

15) CSS Navigation Bar (List of Links)
*Vertical Navigation Bar

<html>
<head>
<style>

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  width: 25%;
  background-color: #f1f1f1;
  position: fixed; "fixar menu"
  height: 100%;
  overflow: auto;
}

li a {
  display: block; "area total do link clicavel"
  color: #000;
  padding: 8px 16px;
  text-decoration: none;
}

li a.active {
  background-color: #4CAF50; "pagina atual com cor exata"
  color: white;
}

li a:hover:not(.active) {
  background-color: #555;
  color: white;
}
</style>
</head>
<body>

<h2>Vertical Navigation Bar</h2>

<ul>
  <li><a class="active" href="#home">Home</a></li>
  <li><a href="#news">News</a></li>
  <li><a href="#contact">Contact</a></li>
  <li><a href="#about">About</a></li>
</ul>

</body>
</html>

*CSS Horizontal Navagation Bar

<!DOCTYPE html>
<html>
<head>
<style>
ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  overflow: hidden;
  border: 1px solid #e7e7e7;
  background-color: #f3f3f3;
  position: fixed;
  top: 0;
  width: 100%;
}

li {
  float: left;
  border-right:1px solid #bbb;
}

li a {
  display: block;
  color: #666;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}

li a:hover:not(.active) {
  background-color: #ddd;
}

li a.active {
  color: white;
  background-color: #4CAF50;
}
</style>
</head>
<body>

<ul>
  <li><a class="active" href="#home">Home</a></li>
  <li><a href="#news">News</a></li>
  <li><a href="#contact">Contact</a></li>
  <li><a href="#about">About</a></li>
</ul>

<div style="padding:20px;margin-top:30px;background-color:#1abc9c;height:1500px;">
  <h1>Fixed Top Navigation Bar</h1>
  <p>Some text some text some text some text..</p>
</div>

</body>
</html>

16) CSS Display

display(none,block,inline,inline-block)	Specifies how an element should be displayed
visibility(hidden)			Specifies whether or not an element should be visible

17) CSS Position
- A position é uma propriedade especifica o tipo de método de posicionamento usado
para um elemento.

Existem cinco valores de posição diferentes:

static (padrão)
relative (posicionado em relacao ao elemento anterior)
fixed (fixado se a pag descer)
absolute (tem q ter top,right,left...) em relação ao container
sticky

18) CSS Overflow 
- qual comportamento dos elementos que excedem um container

visible - Default. The overflow is not clipped. The content renders outside the element's box
hidden - The overflow is clipped, and the rest of the content will be invisible
scroll - The overflow is clipped, and a scrollbar is added to see the rest of the content
auto - Similar to scroll, but it adds scrollbars only when necessary

19) CSS Float and Clear
- como configurar elementos que ficam flutuantes dentro da pag

*Float
	float pode ser (none, right, inherit or left)
*Clear
	clear poder (none, right, both, inherit or left)

20) CSS Pseudo-element
-Syntax

selector::pseudo-element {
  property: value;
}

::after		Insert something after the content of each <p> element

p::after {
  content: url(marcador.png);
}
::before	Insert something before the content of each <p> element

h1::before {
  content: "olá - ";
  color: red;
}
::first-letter	Selects the first letter of each <p> element

p::first-letter {
  color: #ff0000;
  font-size: xx-large;
}
::first-line	Selects the first line of each <p> element

p::first-line {
  color: #ff0000;
  font-variant: small-caps;
}
::selection	Selects the portion of an element that is selected by a user

p::first-line {
  color: #ff0000;
  font-variant: small-caps;
}

OBS:. pode fazer isso
p.intro::first-letter {
}  

.intro::first-letter {
}  

21) CSS Dropdowns

<style>
/* Style The Dropdown Button */
.dropbtn {
  background-color: #4CAF50;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #f1f1f1}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
  display: block;
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
  background-color: #3e8e41;
}
</style>

<div class="dropdown">
  <button class="dropbtn">Dropdown</button>
  <div class="dropdown-content">
    <a href="#">Link 1</a>
    <a href="#">Link 2</a>
    <a href="#">Link 3</a>
  </div>
</div>

22) Conflict Resolution
1º sytle, 2º #id, 3º vem class, 4º vem numero de elementos (o numero maior ganha)
obs:. pode usar !important

sempre a leitura mais recente vai ser usada no html

23) Box-Sizing

By default, the width and height of an element is calculated like this:

width + padding(2x) + border(2x) = actual width of an element
height + padding(2x) + border(2x) = actual height of an element

24) @media - Layout Responsivo (Booleano, só e lida as informações dos comandos se for True)
-Adaptar a pagina em certos dispositivos 

Dispostivos:
	print(impressora)
	screen
	speech (leitores de arq digitais)
	all

*Print
@media (max-width: 767px) , (min-width: 992px)
@media screen and (max-width: 400px){
  body {
     background: red;
  }
}
 